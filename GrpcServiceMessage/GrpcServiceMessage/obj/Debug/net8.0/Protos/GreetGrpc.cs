// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protos/greet.proto
// </auto-generated>
#pragma warning disable 0414, 1591, 8981, 0612
#region Designer generated code

using grpc = global::Grpc.Core;

namespace GrpcServiceMessage {
  public static partial class MessageBroker
  {
    static readonly string __ServiceName = "MessageBroker";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::GrpcServiceMessage.PublishRequest> __Marshaller_PublishRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::GrpcServiceMessage.PublishRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::GrpcServiceMessage.Message> __Marshaller_Message = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::GrpcServiceMessage.Message.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::GrpcServiceMessage.Empty> __Marshaller_Empty = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::GrpcServiceMessage.Empty.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::GrpcServiceMessage.TopicList> __Marshaller_TopicList = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::GrpcServiceMessage.TopicList.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::GrpcServiceMessage.ClientRequest> __Marshaller_ClientRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::GrpcServiceMessage.ClientRequest.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::GrpcServiceMessage.PublishRequest, global::GrpcServiceMessage.Message> __Method_Publish = new grpc::Method<global::GrpcServiceMessage.PublishRequest, global::GrpcServiceMessage.Message>(
        grpc::MethodType.ServerStreaming,
        __ServiceName,
        "Publish",
        __Marshaller_PublishRequest,
        __Marshaller_Message);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::GrpcServiceMessage.Empty, global::GrpcServiceMessage.TopicList> __Method_GetTopics = new grpc::Method<global::GrpcServiceMessage.Empty, global::GrpcServiceMessage.TopicList>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetTopics",
        __Marshaller_Empty,
        __Marshaller_TopicList);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::GrpcServiceMessage.ClientRequest, global::GrpcServiceMessage.Message> __Method_Subscribe_publisher = new grpc::Method<global::GrpcServiceMessage.ClientRequest, global::GrpcServiceMessage.Message>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Subscribe_publisher",
        __Marshaller_ClientRequest,
        __Marshaller_Message);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::GrpcServiceMessage.ClientRequest, global::GrpcServiceMessage.Message> __Method_SubscribeToTopic = new grpc::Method<global::GrpcServiceMessage.ClientRequest, global::GrpcServiceMessage.Message>(
        grpc::MethodType.ServerStreaming,
        __ServiceName,
        "SubscribeToTopic",
        __Marshaller_ClientRequest,
        __Marshaller_Message);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::GrpcServiceMessage.ClientRequest, global::GrpcServiceMessage.Message> __Method_Enviar = new grpc::Method<global::GrpcServiceMessage.ClientRequest, global::GrpcServiceMessage.Message>(
        grpc::MethodType.ServerStreaming,
        __ServiceName,
        "Enviar",
        __Marshaller_ClientRequest,
        __Marshaller_Message);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::GrpcServiceMessage.ClientRequest, global::GrpcServiceMessage.Message> __Method_Subcribirse_Cliente = new grpc::Method<global::GrpcServiceMessage.ClientRequest, global::GrpcServiceMessage.Message>(
        grpc::MethodType.ServerStreaming,
        __ServiceName,
        "Subcribirse_Cliente",
        __Marshaller_ClientRequest,
        __Marshaller_Message);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::GrpcServiceMessage.ClientRequest, global::GrpcServiceMessage.ClientRequest> __Method_Subscribe_prueba = new grpc::Method<global::GrpcServiceMessage.ClientRequest, global::GrpcServiceMessage.ClientRequest>(
        grpc::MethodType.ServerStreaming,
        __ServiceName,
        "Subscribe_prueba",
        __Marshaller_ClientRequest,
        __Marshaller_ClientRequest);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::GrpcServiceMessage.ClientRequest, global::GrpcServiceMessage.TopicList> __Method_listar_mensajes = new grpc::Method<global::GrpcServiceMessage.ClientRequest, global::GrpcServiceMessage.TopicList>(
        grpc::MethodType.Unary,
        __ServiceName,
        "listar_mensajes",
        __Marshaller_ClientRequest,
        __Marshaller_TopicList);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::GrpcServiceMessage.GreetReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of MessageBroker</summary>
    [grpc::BindServiceMethod(typeof(MessageBroker), "BindService")]
    public abstract partial class MessageBrokerBase
    {
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task Publish(global::GrpcServiceMessage.PublishRequest request, grpc::IServerStreamWriter<global::GrpcServiceMessage.Message> responseStream, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::GrpcServiceMessage.TopicList> GetTopics(global::GrpcServiceMessage.Empty request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::GrpcServiceMessage.Message> Subscribe_publisher(global::GrpcServiceMessage.ClientRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task SubscribeToTopic(global::GrpcServiceMessage.ClientRequest request, grpc::IServerStreamWriter<global::GrpcServiceMessage.Message> responseStream, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task Enviar(global::GrpcServiceMessage.ClientRequest request, grpc::IServerStreamWriter<global::GrpcServiceMessage.Message> responseStream, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task Subcribirse_Cliente(global::GrpcServiceMessage.ClientRequest request, grpc::IServerStreamWriter<global::GrpcServiceMessage.Message> responseStream, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task Subscribe_prueba(global::GrpcServiceMessage.ClientRequest request, grpc::IServerStreamWriter<global::GrpcServiceMessage.ClientRequest> responseStream, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::GrpcServiceMessage.TopicList> listar_mensajes(global::GrpcServiceMessage.ClientRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(MessageBrokerBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_Publish, serviceImpl.Publish)
          .AddMethod(__Method_GetTopics, serviceImpl.GetTopics)
          .AddMethod(__Method_Subscribe_publisher, serviceImpl.Subscribe_publisher)
          .AddMethod(__Method_SubscribeToTopic, serviceImpl.SubscribeToTopic)
          .AddMethod(__Method_Enviar, serviceImpl.Enviar)
          .AddMethod(__Method_Subcribirse_Cliente, serviceImpl.Subcribirse_Cliente)
          .AddMethod(__Method_Subscribe_prueba, serviceImpl.Subscribe_prueba)
          .AddMethod(__Method_listar_mensajes, serviceImpl.listar_mensajes).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, MessageBrokerBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_Publish, serviceImpl == null ? null : new grpc::ServerStreamingServerMethod<global::GrpcServiceMessage.PublishRequest, global::GrpcServiceMessage.Message>(serviceImpl.Publish));
      serviceBinder.AddMethod(__Method_GetTopics, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::GrpcServiceMessage.Empty, global::GrpcServiceMessage.TopicList>(serviceImpl.GetTopics));
      serviceBinder.AddMethod(__Method_Subscribe_publisher, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::GrpcServiceMessage.ClientRequest, global::GrpcServiceMessage.Message>(serviceImpl.Subscribe_publisher));
      serviceBinder.AddMethod(__Method_SubscribeToTopic, serviceImpl == null ? null : new grpc::ServerStreamingServerMethod<global::GrpcServiceMessage.ClientRequest, global::GrpcServiceMessage.Message>(serviceImpl.SubscribeToTopic));
      serviceBinder.AddMethod(__Method_Enviar, serviceImpl == null ? null : new grpc::ServerStreamingServerMethod<global::GrpcServiceMessage.ClientRequest, global::GrpcServiceMessage.Message>(serviceImpl.Enviar));
      serviceBinder.AddMethod(__Method_Subcribirse_Cliente, serviceImpl == null ? null : new grpc::ServerStreamingServerMethod<global::GrpcServiceMessage.ClientRequest, global::GrpcServiceMessage.Message>(serviceImpl.Subcribirse_Cliente));
      serviceBinder.AddMethod(__Method_Subscribe_prueba, serviceImpl == null ? null : new grpc::ServerStreamingServerMethod<global::GrpcServiceMessage.ClientRequest, global::GrpcServiceMessage.ClientRequest>(serviceImpl.Subscribe_prueba));
      serviceBinder.AddMethod(__Method_listar_mensajes, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::GrpcServiceMessage.ClientRequest, global::GrpcServiceMessage.TopicList>(serviceImpl.listar_mensajes));
    }

  }
}
#endregion
